{"version":3,"sources":["context/appContext.ts","context/appProvider.tsx","hooks/useApi.ts","pages/home/home.tsx","pages/findPage/FindPage.tsx","pages/SerieDetail/SerieDetail.tsx","routers/AppRouter.tsx","App.tsx","context/withContext.tsx","serviceWorker.ts","index.tsx"],"names":["apiHook","fetchData","getFindData","key","Promise","getFindDetailMovie","id","getActorsForMovie","findDetailMovieData","actorsMovie","getSerieInfo","getCapsSerie","CapNumber","serieData","capsSeries","appContext","React","createContext","AppProvider","children","useState","setSerieData","setCapsSeries","setFindDetailMovie","setActorsMovie","url","a","fetch","then","response","json","catch","error","console","vfrom","log","resolve","reject","process","data","capNumber","useApi","Provider","value","HOC","useEffect","style","marginTop","src","width","height","show","setShow","history","useHistory","handleClose","useContext","setKey","update","setUpdate","alert","setAlert","datos","setDatos","setVfrom","hits","setHits","results","inline","type","placeholder","className","onChange","event","target","name","onKeyDown","preventDefault","variant","onClick","replace","dataLength","length","next","concat","hasMore","loader","map","element","index","Img","backdrop_path","Body","original_name","Title","original_title","media_type","size","block","push","onHide","Header","closeButton","overview","cast","Item","character","Footer","location","useLocation","paramId","setParamId","tempNum","setTempNum","state","alt","seasons","episodes","float","margin","boxShadow","still_path","Text","textAlign","substring","BasicExample","bg","Brand","href","Link","padding","exact","path","component","HomePage","FindPage","SerieDetail","to","Component","props","callBack","WithContext","WrappedComponent","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a420bda9.chunk.js","sourcesContent":["import React from 'react'\nimport { IUseApi } from '../hooks/useApi';\n\n\n\nconst apiHook: IUseApi = {\n    fetchData : () => {},\n    getFindData:(key) => new Promise<any>(() => {}) ,\n    getFindDetailMovie:(id) => {},\n    getActorsForMovie:(id) => {},\n    findDetailMovieData: [],\n    actorsMovie:[],\n    getSerieInfo:(id:string) => {},\n    getCapsSerie:(id:string , CapNumber:number) => {},\n    serieData:[],\n    capsSeries:[]\n}\n\nexport const appContext =  React.createContext({ ...apiHook});\n","import React from 'react';\nimport { appContext } from \"./appContext\";\nimport { useApi } from \"../hooks/useApi\";\n\nfunction AppProvider ({ children }: any) {\n\n    const apiHook = useApi();\n\n\n    return (\n        <appContext.Provider value={{...apiHook }}>\n            {children}\n        </appContext.Provider>\n    );\n}\n\nexport default AppProvider;\n","import { useState } from \"react\"\n\n//Interface de respuesta del api para controlar acceso de datos al front\n\ntype response = {\n    main: any\n}\n\nexport interface IUseApi {\n    fetchData: any,\n    getFindData: (key:string , vfrom:number) => Promise<any>,\n    getFindDetailMovie: (id:string) => void,\n    getSerieInfo: (id:string) => void,\n    getActorsForMovie: (id:string) => void,\n    getCapsSerie: (id:string , capNumber:number) => void,\n    actorsMovie:any,\n    capsSeries: any,\n    serieData: any,\n    findDetailMovieData: any,\n}\n\n\n\n\nfunction useApi() {\n\n\n    const [serieData, setSerieData] = useState([]);\n    const [capsSeries, setCapsSeries] = useState([]);\n    const [findDetailMovieData, setFindDetailMovie] = useState([]);\n    const [actorsMovie, setActorsMovie] = useState([]);\n\n    /**\n     * Metodo para obtener datos del api por medio de fetch\n     * Se puede implementar este metodo para que retorne una promesa y capturarla desde los metodos propios\n     */\n\n    const fetchData = async (url: string) => {\n        return fetch(url)\n          .then((response: any) => response.json())\n          .catch(error => {\n              console.error(error)\n          });\n    }\n\n\n\n    /*Metodo  para obtener los resultados de  film*/\n    const getFindData = (key:string , vfrom:number) => {\n        console.log('pagina a  buscar  ***' , vfrom)\n        return new Promise((resolve, reject) => {\n            const url = `${process.env.REACT_APP_URL_FIND}multi?api_key=${process.env.REACT_APP_KEY_API}&language=es-ES&query=${key}&page=${vfrom}&include_adult=true`;\n            fetch(url)\n              .then((response: any) => response.json())\n              .then((data: any) => {\n                  resolve(data)\n              }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    /*Metodo  para obtener los resultados de  film en detalle*/\n    const getFindDetailMovie = (id:string) => {\n        const url = `${process.env.REACT_APP_URL_FIND_DETAIL}${id}?api_key=${process.env.REACT_APP_KEY_API}&language=es-ES`;\n        fetchData(url).then((data:any) => {\n            if (data) {\n                setFindDetailMovie(data)\n            }\n        })\n    }\n\n    /*Metodo  para obtener los resultados de  actores film en detalle*/\n    const getActorsForMovie = (id:string) => {\n        const url = `${process.env.REACT_APP_URL_FIND_DETAIL}${id}/casts?api_key=${process.env.REACT_APP_KEY_API}&language=es-ES`;\n        fetchData(url).then((data:any) => {\n            if (data) {\n                setActorsMovie(data)\n            }\n        })\n    }\n\n    /*Metodo  para obtener los resultados detalle de series*/\n    const getSerieInfo = (id:string) => {\n        const url = `${process.env.REACT_APP_URL_SERIE}${id}?api_key=${process.env.REACT_APP_KEY_API}&language=es-ES`;\n        console.log(url)\n        fetchData(url).then((data:any) => {\n            if (data) {\n                setSerieData(data)\n            }\n        })\n    }\n\n    /*Metodo  para obtener los capitulos de las series*/\n    const getCapsSerie = (id:string , capNumber:any) => {\n        const url = `${process.env.REACT_APP_URL_SERIE}${id}/season/${capNumber}?api_key=${process.env.REACT_APP_KEY_API}&language=es-ES`;\n        fetchData(url).then((data:any) => {\n            if (data) {\n                setCapsSeries(data)\n            }\n        })\n    }\n\n\n\n\n\n    return {\n        fetchData,\n        getFindData,\n        getFindDetailMovie,\n        capsSeries,\n        findDetailMovieData,\n        getActorsForMovie,\n        getCapsSerie,\n        actorsMovie,\n        getSerieInfo,\n        serieData\n    }\n}\n\nexport {\n    useApi\n}\n","import React, {useEffect} from 'react';\nimport './home.css';\n/*import { appContext } from '../../context/appContext';*/\nimport { HOC } from '../../App';\n\ninterface ContainerProps {\n}\n\nconst HomePage: React.FC<ContainerProps> = () => {\n\n  /*  const { getFindData  } = useContext(appContext)*/\n\n  useEffect(() => {\n\n    // eslint-disable-next-line\n  }, []);\n\n\n\n  return (\n    <div style={{marginTop:'-1em'}}>\n      <iframe src=\"https://newtonvisionco.com/\"  width={'100%'} height={'1000px'} ></iframe>\n    </div>\n  );\n};\n\nexport default HOC(HomePage);\n","import React, {useEffect, useContext, useState} from 'react';\nimport './FindPage.css';\nimport { appContext } from '../../context/appContext';\nimport { HOC } from '../../App';\nimport Card from \"react-bootstrap/cjs/Card\";\nimport Button from \"react-bootstrap/cjs/Button\";\nimport FormControl from \"react-bootstrap/cjs/FormControl\";\nimport Form from \"react-bootstrap/cjs/Form\";\nimport Alert from \"react-bootstrap/cjs/Alert\";\nimport Modal from \"react-bootstrap/cjs/Modal\";\nimport ListGroup from \"react-bootstrap/cjs/ListGroup\";\nimport { useHistory } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\ninterface ContainerProps {\n\n}\n\n\nconst FindPage: React.FC = () => {\n\n  const [show, setShow] = useState(false);\n  const history = useHistory();\n  const handleClose = () => setShow(false);\n\n  const { getFindData  , getFindDetailMovie , findDetailMovieData ,getActorsForMovie , actorsMovie  } = useContext(appContext)\n  const [ key , setKey ]  = useState('')\n  const [ update , setUpdate ] = useState(false)\n  const [ alert , setAlert ] = useState(false)\n  const [ datos, setDatos] = useState({\n    key: ''\n  })\n\n  let [ vfrom, setVfrom] = useState(1)\n  const [hits, setHits] = useState([]);\n\n  useEffect(() => {\n    if (key) getFindData(key, 1).then((data:any) => {\n      if (data) setHits(data.results)\n    })\n    // eslint-disable-next-line\n  }, [update]);\n\n\n  const fetchMoreData = () => {\n\n    console.log('fetchMoreData entra' , vfrom);\n    setVfrom(vfrom++);\n\n    getFindData(key, vfrom).then((data:any) => {\n      console.log('data', data)\n      if (data ){\n        if (vfrom === 1){\n          setHits(data.results)\n          console.log('hits 1',  hits)\n        }else{\n          setHits(hits.concat(data.results))\n          console.log('hits 2',  hits)\n        }\n      }\n    })\n\n  };\n\n  const fnSumaVfrom = () => {\n    setVfrom(vfrom++)\n    console.log(vfrom);\n    fetchMoreData();\n  }\n\n  const handleInputChange = (event:any) => {\n    setAlert(false)\n    setDatos({\n      ...datos,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  const enviarDatos = (event:any) => {\n    event.preventDefault()\n    setAlert(false)\n    setKey(datos.key.replace(/[^a-zA-Z 0-9.]+/g,' '))\n    setUpdate(!update)\n    console.log('enviando datos...' + datos.key )\n  }\n\n  const handleKeyDown = (event:any) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setAlert(true)\n    }\n  }\n\n  const fnSeeMore = (id:string) => {\n    setShow(true);\n    if (id){\n      getFindDetailMovie(id);\n      getActorsForMovie(id);\n    }\n  }\n\n\n  function fnDetail(id: string) {\n    console.log('redireciona ?')\n    history.push('/serieDetail',{id:id})\n  }\n\n  return (\n    <>\n      <Form inline>\n        <FormControl  type=\"text\" placeholder=\"Search\" className=\"mr-sm-2 searchInput\"\n                      onChange={handleInputChange} onKeyDown={handleKeyDown}  name={'key'}  />\n        <Button variant=\"outline-info\" onClick={enviarDatos} >Search</Button>\n      </Form>\n      <hr/>\n      {\n        alert ?\n          <Alert  variant={'dark'}> Enter disabled </Alert> :  <></>\n      }\n\n      {\n        hits ?\n          <InfiniteScroll\n            dataLength={hits.length}\n            next={fnSumaVfrom}\n            hasMore={true}\n            loader={<></>}\n          >\n            {\n              hits.length > 0 ?\n                hits.map( (element:any , index:number) => {\n                  return (\n                    <Card className={'cardStyle'} key={index}>\n                      <Card.Img variant=\"top\" src={ `https://image.tmdb.org/t/p/original${element.backdrop_path}`} />\n                      <Card.Body>\n                        { element.original_name ?\n                          <Card.Title>{element.original_name}</Card.Title> :\n                          <Card.Title>{element.original_title}</Card.Title>}\n\n                        {\n                          element.media_type === 'tv' ?\n                            <Button size=\"sm\" variant=\"outline-secondary\" block onClick={ () => fnDetail( `${element.id}` ) }  > Ver más</Button> :\n                            <Button size=\"sm\" variant=\"outline-primary\" onClick={ () => fnSeeMore( `${element.id}` ) }  block>Detalle</Button>\n                        }\n                      </Card.Body>\n                    </Card>\n                  )\n                })\n                :\n                <p>No se encontraron resultados ...</p>\n            }\n          </InfiniteScroll>\n          :\n          <></>\n      }\n\n      <Modal show={show} onHide={handleClose} size={'lg'}>\n        <Modal.Header closeButton>\n          {\n            findDetailMovieData.original_title ?\n              <Modal.Title>{findDetailMovieData.original_title}</Modal.Title> :\n              <Modal.Title>No se encontraron resultados</Modal.Title>\n          }\n\n        </Modal.Header>\n        {\n          findDetailMovieData.overview ?\n            <>\n              <Modal.Body>\n                {findDetailMovieData.overview}\n                <hr/>\n                <h3>Reparto</h3>\n                <ListGroup >\n                  {\n                    actorsMovie.cast?.length > 0 ?\n                      actorsMovie.cast.map( (element:any , index:number) => {\n                        return(\n                          <ListGroup.Item key={index}><b> {element.character} </b> {element.name} </ListGroup.Item>\n                        )\n                      })\n                      :\n                      <> No se encontraron resultados...</>\n                  }\n\n                </ListGroup>\n              </Modal.Body>\n            </>\n            :\n            <Modal.Body><p>Descripción no disponible para tv show`s.</p></Modal.Body>\n        }\n        <Modal.Footer>\n          <Button variant=\"outline-dark\" onClick={handleClose}> Aceptar </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\n\n\n\nexport default HOC(FindPage);\n","import React, {useContext, useEffect, useState} from 'react';\nimport './SerieDetail.css';\nimport { appContext } from '../../context/appContext';\nimport { HOC } from '../../App';\nimport { useLocation } from \"react-router-dom\";\nimport Row from \"react-bootstrap/cjs/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\nimport Jumbotron from \"react-bootstrap/cjs/Jumbotron\";\n\nimport Button from \"react-bootstrap/cjs/Button\";\nimport Card from \"react-bootstrap/cjs/Card\";\n\n\n\n\n\ninterface ContainerProps {\n}\n\nconst SerieDetail: React.FC<ContainerProps> = () => {\n  const location = useLocation();\n  const [ paramId  , setParamId ] = useState()\n  const [ tempNum  , setTempNum ] = useState()\n  const {getSerieInfo , serieData , getCapsSerie , capsSeries} = useContext(appContext)\n  /*  const [radioValue, setRadioValue] = useState('1');*/\n\n  useEffect(() => {\n    // @ts-ignore\n    setParamId( location.state.id);\n    console.log('myParams' , paramId)\n    if (paramId){\n      getSerieInfo(paramId);\n      if (!tempNum) {\n        getCapsSerie(paramId , 0);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, [paramId]);\n\n  useEffect( ()=>{\n    // cambia cap\n    if (tempNum && paramId){\n      getCapsSerie(paramId , tempNum);\n    }\n    // eslint-disable-next-line\n  }, [ tempNum])\n\n\n\n  return (\n    <>\n      <div className={'container_series_info'}>\n        {console.log(serieData)}\n        {\n          serieData ?\n            <img  className={'serieImg'} src={ `https://image.tmdb.org/t/p/original${serieData.backdrop_path}`} alt=\"imagen\" /> :<></>\n        }\n        <div className=\"\">\n\n          <div className=\"padding\">\n            <Jumbotron className={'custom_jumbo'}>\n              <h3><b>{serieData.original_name}</b></h3>\n            </Jumbotron>\n          </div>\n          <p className={'text_overview_serie'}>{serieData.overview}</p>\n\n          <div className=\"padding\">\n            <Jumbotron className={'custom_jumbo'}>\n              <h2>Temporadas</h2>\n            </Jumbotron>\n          </div>\n          <Row>\n            <Col>\n              {\n                serieData.seasons ?\n                  serieData.seasons.map((element:any , index:number) => {\n                    return(\n                      <Button key={index} block variant=\"outline-dark\" className={'btn_temp'} onClick={ ()=> setTempNum(index) }>{element.name}</Button>\n                    )\n                  })\n                  : <></>\n              }\n            </Col>\n          </Row>\n\n          <br/>\n\n          <div className=\"padding\">\n            <Jumbotron className={'custom_jumbo'}>\n              <h3>Capitulos temporada {tempNum}</h3>\n            </Jumbotron>\n          </div>\n          {\n            capsSeries.episodes?.length > 0 ?\n              capsSeries.episodes.map((element:any, index:number) => {\n                return (\n                  <Card style={{ width: '17%' , float:'left', margin:'1% 1%' , boxShadow:'1px 1px 6px black'}} key={index}>\n                    <Card.Img variant=\"top\" src={ `https://image.tmdb.org/t/p/original${element.still_path}`} />\n                    <Card.Body>\n                      <Card.Title> <b> {element.name} </b></Card.Title>\n                      <Card.Text style={{textAlign:'left'}}>\n                        {element.overview.substring(0,120)}...\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                )\n              }) :\n              <></>\n          }\n\n\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default HOC(SerieDetail);\n","import React from \"react\";\nimport {\n\t\tBrowserRouter as Router,\n\t\tSwitch,\n\t\tRoute,\n\t\tRedirect\n} from \"react-router-dom\";\n\n\nimport HomePage from \"../pages/home/home\";\nimport FindPage from \"../pages/findPage/FindPage\";\nimport SerieDetail from \"../pages/SerieDetail/SerieDetail\";\n\nimport Navbar from \"react-bootstrap/cjs/Navbar\";\nimport Nav from \"react-bootstrap/cjs/Nav\";\n\n\n\nexport default function BasicExample() {\n\t\treturn (\n\t\t\t\t<Router>\n\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t\t\t\t\t\t<Navbar.Brand href=\"/home\">Newton Films</Navbar.Brand>\n\t\t\t\t\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Link href={'/home'}>  Inicio  </Nav.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Link href={'/find'}>  Buscar  </Nav.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*\t<Nav.Link href={'/detail'}>  detail  </Nav.Link>*/}\n\t\t\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t\t</Navbar>\n\n\n\t\t\t\t\t\t\t\t{/*\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li> <Link to=\"/home\">Home</Link></li>\n\t\t\t\t\t\t\t\t\t\t<li> <Link to=\"/find\">Finder</Link> </li>\n\t\t\t\t\t\t\t\t\t\t<li> <Link to=\"/detail\">Detail</Link> </li>\n\t\t\t\t\t\t\t\t</ul>*/}\n\n\t\t\t\t\t\t\t\t<div style={{padding:'1em 0' }}>\n\t\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/home\" component={HomePage} />\n\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/find\" component={FindPage} />\n\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/serieDetail/\" component={SerieDetail} />\n\t\t\t\t\t\t\t\t\t\t\t\t<Redirect to='/home' />\n\t\t\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t);\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\n\n","import React from 'react';\nimport './App.css';\nimport { WithContext } from './context/withContext';\nimport AppRouter from \"./routers/AppRouter\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport './styles/styles.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\n\n\n\ninterface HOCP {\n  state: boolean;\n  callBack: () => void;\n}\n\nexport function HOC(Component: React.FC<HOCP>)  {\n  function rederizate(props: any) {\n    return (\n      <Component state={false} callBack={() => {}} />\n    )\n  }\n  return rederizate;\n}\n\n\nexport default WithContext(App);\n","import React from 'react';\nimport AppProvider from \"./appProvider\";\n\nexport function WithContext(WrappedComponent: any) {\n    function appContainer(props: any) {\n        return(\n            <AppProvider>\n                <WrappedComponent {...props}/>\n            </AppProvider>\n        );\n    }\n\n    return appContainer\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}